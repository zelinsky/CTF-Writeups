# coding: utf-8
from Crypto.Util.number import *
with open('flag.enc', 'r') as f:
    flag_data = f.read().strip()
enc_flag_bits = flag_data.split('\n')
    
N = 23981306327188221819291352455300124608114670714977979223022816906368788909398653961976023086718129607035805397846230124785550919468973090809881210560931396002918119995710297723411794214888622784232065592366390586879306041418300835178522354945438521139847806375923379136235993890801176301812907708937658277646761892297209069757559519399120988948212988924583632878840216559421398253025960456164998680766732013248599742397199862820924441357624187811402515396393385081892966284318521068948266144251848088067639941653475035145362236917008153460707675427945577597137822575880268720238301307972813226576071488632898694390629
e = 0x10001
e
import random
def enc(flag):
    m = bytes_to_long(flag)
    o = ''
    while m:
        padding = random.randint(0, 2**1000) ** 2
        message = padding << 1 + m % 2
	print bin(message)
        cipher = pow(message, e, N)
        o+=hex(cipher) + '\n'
        m /= 2
    return o

def r(a) :
    for b in range(1,((N-1)/2) + 1):
        if (b ** 2) % N == a:
            return 1
        else:
            return 0
