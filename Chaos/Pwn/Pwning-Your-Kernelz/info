pwning your kernelz

Category: Pwn
Difficulty: 0day
Author: LinHe

This time we got a real macOS kernel 0day for you! And the bug is super easy to trigger:

x86_saved_state32_t state;
memset(&state, 0xFF, sizeof(x86_saved_state32_t));
thread_set_state(mach_thread_self(), x86_SAVED_STATE32, (thread_state_t) &state, x86_SAVED_STATE32_COUNT);
while (1) {}

Please exploit it to become root. Flag can be found in /flag.

Source code and the kernel we're using can be found here.

Once you got a working exploit, please:

    Send an IRC message to LinHe with a URL to your exploit and
    Call Linus: Extension: AAPL (2275) or wait

Hints:

    This bug can only be exploited by 32 bit apps, therefore you will need Xcode 9.4.1 or lower.
    We're running the latest version of macOS, 10.14.6.
    The included kernel is the development kernel from the latest KDK.
    You will need to disable SMAP on your mac. This is why we use the development kernel: You can disable SMAP like this (only possible with development kernels): sudo nvram boot-args=-pmap_smap_disable
    SMEP is enabled. The kernel slide will be passed to your exploit in the first argument as hex string (i.e. we will run your program like this: ./exploit 0xDEADBEEF with 0xDEADBEEF being the kernel slide).
    Our VM is not connected to the internet.
